#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Clinic
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ECMS")]
	public partial class ECMSDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAPPLICATIONS(APPLICATIONS instance);
    partial void UpdateAPPLICATIONS(APPLICATIONS instance);
    partial void DeleteAPPLICATIONS(APPLICATIONS instance);
    partial void InsertDOCTORS(DOCTORS instance);
    partial void UpdateDOCTORS(DOCTORS instance);
    partial void DeleteDOCTORS(DOCTORS instance);
    partial void InsertEXAMINATIONS(EXAMINATIONS instance);
    partial void UpdateEXAMINATIONS(EXAMINATIONS instance);
    partial void DeleteEXAMINATIONS(EXAMINATIONS instance);
    partial void InsertORDERS(ORDERS instance);
    partial void UpdateORDERS(ORDERS instance);
    partial void DeleteORDERS(ORDERS instance);
    partial void InsertPHARMACIST_HOLIDAYS(PHARMACIST_HOLIDAYS instance);
    partial void UpdatePHARMACIST_HOLIDAYS(PHARMACIST_HOLIDAYS instance);
    partial void DeletePHARMACIST_HOLIDAYS(PHARMACIST_HOLIDAYS instance);
    partial void InsertPHARMACIST_OPENTIMES(PHARMACIST_OPENTIMES instance);
    partial void UpdatePHARMACIST_OPENTIMES(PHARMACIST_OPENTIMES instance);
    partial void DeletePHARMACIST_OPENTIMES(PHARMACIST_OPENTIMES instance);
    partial void InsertPHARMACISTS(PHARMACISTS instance);
    partial void UpdatePHARMACISTS(PHARMACISTS instance);
    partial void DeletePHARMACISTS(PHARMACISTS instance);
    partial void InsertPRESCRIPTIONS(PRESCRIPTIONS instance);
    partial void UpdatePRESCRIPTIONS(PRESCRIPTIONS instance);
    partial void DeletePRESCRIPTIONS(PRESCRIPTIONS instance);
    partial void InsertSPECIALIZATIONS(SPECIALIZATIONS instance);
    partial void UpdateSPECIALIZATIONS(SPECIALIZATIONS instance);
    partial void DeleteSPECIALIZATIONS(SPECIALIZATIONS instance);
    partial void InsertSPECIALIZATIONS_OF_DOCTORS(SPECIALIZATIONS_OF_DOCTORS instance);
    partial void UpdateSPECIALIZATIONS_OF_DOCTORS(SPECIALIZATIONS_OF_DOCTORS instance);
    partial void DeleteSPECIALIZATIONS_OF_DOCTORS(SPECIALIZATIONS_OF_DOCTORS instance);
    partial void InsertSYSTEM_ADMINS(SYSTEM_ADMINS instance);
    partial void UpdateSYSTEM_ADMINS(SYSTEM_ADMINS instance);
    partial void DeleteSYSTEM_ADMINS(SYSTEM_ADMINS instance);
    partial void InsertPATIENTS(PATIENTS instance);
    partial void UpdatePATIENTS(PATIENTS instance);
    partial void DeletePATIENTS(PATIENTS instance);
    partial void InsertDOCTOR_OPENTIMES(DOCTOR_OPENTIMES instance);
    partial void UpdateDOCTOR_OPENTIMES(DOCTOR_OPENTIMES instance);
    partial void DeleteDOCTOR_OPENTIMES(DOCTOR_OPENTIMES instance);
    #endregion
		
		public ECMSDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["ECMSConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ECMSDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ECMSDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ECMSDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ECMSDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<APPLICATIONS> APPLICATIONS
		{
			get
			{
				return this.GetTable<APPLICATIONS>();
			}
		}
		
		public System.Data.Linq.Table<DOCTORS> DOCTORS
		{
			get
			{
				return this.GetTable<DOCTORS>();
			}
		}
		
		public System.Data.Linq.Table<EXAMINATIONS> EXAMINATIONS
		{
			get
			{
				return this.GetTable<EXAMINATIONS>();
			}
		}
		
		public System.Data.Linq.Table<ORDERS> ORDERS
		{
			get
			{
				return this.GetTable<ORDERS>();
			}
		}
		
		public System.Data.Linq.Table<PHARMACIST_HOLIDAYS> PHARMACIST_HOLIDAYS
		{
			get
			{
				return this.GetTable<PHARMACIST_HOLIDAYS>();
			}
		}
		
		public System.Data.Linq.Table<PHARMACIST_OPENTIMES> PHARMACIST_OPENTIMES
		{
			get
			{
				return this.GetTable<PHARMACIST_OPENTIMES>();
			}
		}
		
		public System.Data.Linq.Table<PHARMACISTS> PHARMACISTS
		{
			get
			{
				return this.GetTable<PHARMACISTS>();
			}
		}
		
		public System.Data.Linq.Table<PRESCRIPTIONS> PRESCRIPTIONS
		{
			get
			{
				return this.GetTable<PRESCRIPTIONS>();
			}
		}
		
		public System.Data.Linq.Table<SPECIALIZATIONS> SPECIALIZATIONS
		{
			get
			{
				return this.GetTable<SPECIALIZATIONS>();
			}
		}
		
		public System.Data.Linq.Table<SPECIALIZATIONS_OF_DOCTORS> SPECIALIZATIONS_OF_DOCTORS
		{
			get
			{
				return this.GetTable<SPECIALIZATIONS_OF_DOCTORS>();
			}
		}
		
		public System.Data.Linq.Table<SYSTEM_ADMINS> SYSTEM_ADMINS
		{
			get
			{
				return this.GetTable<SYSTEM_ADMINS>();
			}
		}
		
		public System.Data.Linq.Table<PATIENTS> PATIENTS
		{
			get
			{
				return this.GetTable<PATIENTS>();
			}
		}
		
		public System.Data.Linq.Table<DOCTOR_OPENTIMES> DOCTOR_OPENTIMES
		{
			get
			{
				return this.GetTable<DOCTOR_OPENTIMES>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.APPLICATIONS")]
	public partial class APPLICATIONS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _patient_id;
		
		private System.Nullable<int> _doctor_id;
		
		private System.Nullable<System.DateTime> _date;
		
		private System.Nullable<bool> _accepted;
		
		private string _sympotoms;
		
		private string _doucments_path;
		
		private EntitySet<EXAMINATIONS> _EXAMINATIONS;
		
		private EntityRef<DOCTORS> _DOCTORS;
		
		private EntityRef<PATIENTS> _PATIENTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onpatient_idChanging(System.Nullable<int> value);
    partial void Onpatient_idChanged();
    partial void Ondoctor_idChanging(System.Nullable<int> value);
    partial void Ondoctor_idChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    partial void OnacceptedChanging(System.Nullable<bool> value);
    partial void OnacceptedChanged();
    partial void OnsympotomsChanging(string value);
    partial void OnsympotomsChanged();
    partial void Ondoucments_pathChanging(string value);
    partial void Ondoucments_pathChanged();
    #endregion
		
		public APPLICATIONS()
		{
			this._EXAMINATIONS = new EntitySet<EXAMINATIONS>(new Action<EXAMINATIONS>(this.attach_EXAMINATIONS), new Action<EXAMINATIONS>(this.detach_EXAMINATIONS));
			this._DOCTORS = default(EntityRef<DOCTORS>);
			this._PATIENTS = default(EntityRef<PATIENTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_patient_id", DbType="Int")]
		public System.Nullable<int> patient_id
		{
			get
			{
				return this._patient_id;
			}
			set
			{
				if ((this._patient_id != value))
				{
					if (this._PATIENTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpatient_idChanging(value);
					this.SendPropertyChanging();
					this._patient_id = value;
					this.SendPropertyChanged("patient_id");
					this.Onpatient_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_doctor_id", DbType="Int")]
		public System.Nullable<int> doctor_id
		{
			get
			{
				return this._doctor_id;
			}
			set
			{
				if ((this._doctor_id != value))
				{
					if (this._DOCTORS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondoctor_idChanging(value);
					this.SendPropertyChanging();
					this._doctor_id = value;
					this.SendPropertyChanged("doctor_id");
					this.Ondoctor_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="Date")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accepted", DbType="Bit")]
		public System.Nullable<bool> accepted
		{
			get
			{
				return this._accepted;
			}
			set
			{
				if ((this._accepted != value))
				{
					this.OnacceptedChanging(value);
					this.SendPropertyChanging();
					this._accepted = value;
					this.SendPropertyChanged("accepted");
					this.OnacceptedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sympotoms", DbType="VarChar(500)")]
		public string sympotoms
		{
			get
			{
				return this._sympotoms;
			}
			set
			{
				if ((this._sympotoms != value))
				{
					this.OnsympotomsChanging(value);
					this.SendPropertyChanging();
					this._sympotoms = value;
					this.SendPropertyChanged("sympotoms");
					this.OnsympotomsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_doucments_path", DbType="VarChar(500)")]
		public string doucments_path
		{
			get
			{
				return this._doucments_path;
			}
			set
			{
				if ((this._doucments_path != value))
				{
					this.Ondoucments_pathChanging(value);
					this.SendPropertyChanging();
					this._doucments_path = value;
					this.SendPropertyChanged("doucments_path");
					this.Ondoucments_pathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="APPLICATIONS_EXAMINATIONS", Storage="_EXAMINATIONS", ThisKey="id", OtherKey="application_id")]
		public EntitySet<EXAMINATIONS> EXAMINATIONS
		{
			get
			{
				return this._EXAMINATIONS;
			}
			set
			{
				this._EXAMINATIONS.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DOCTORS_APPLICATIONS", Storage="_DOCTORS", ThisKey="doctor_id", OtherKey="id", IsForeignKey=true)]
		public DOCTORS DOCTORS
		{
			get
			{
				return this._DOCTORS.Entity;
			}
			set
			{
				DOCTORS previousValue = this._DOCTORS.Entity;
				if (((previousValue != value) 
							|| (this._DOCTORS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DOCTORS.Entity = null;
						previousValue.APPLICATIONS.Remove(this);
					}
					this._DOCTORS.Entity = value;
					if ((value != null))
					{
						value.APPLICATIONS.Add(this);
						this._doctor_id = value.id;
					}
					else
					{
						this._doctor_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("DOCTORS");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PATIENTS_APPLICATIONS", Storage="_PATIENTS", ThisKey="patient_id", OtherKey="id", IsForeignKey=true)]
		public PATIENTS PATIENTS
		{
			get
			{
				return this._PATIENTS.Entity;
			}
			set
			{
				PATIENTS previousValue = this._PATIENTS.Entity;
				if (((previousValue != value) 
							|| (this._PATIENTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PATIENTS.Entity = null;
						previousValue.APPLICATIONS.Remove(this);
					}
					this._PATIENTS.Entity = value;
					if ((value != null))
					{
						value.APPLICATIONS.Add(this);
						this._patient_id = value.id;
					}
					else
					{
						this._patient_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("PATIENTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EXAMINATIONS(EXAMINATIONS entity)
		{
			this.SendPropertyChanging();
			entity.APPLICATIONS = this;
		}
		
		private void detach_EXAMINATIONS(EXAMINATIONS entity)
		{
			this.SendPropertyChanging();
			entity.APPLICATIONS = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DOCTORS")]
	public partial class DOCTORS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _user_name;
		
		private string _native_name;
		
		private string _password;
		
		private string _gender;
		
		private System.Nullable<System.DateTime> _birthday;
		
		private System.Nullable<System.DateTime> _start_year_of_work;
		
		private EntitySet<APPLICATIONS> _APPLICATIONS;
		
		private EntitySet<SPECIALIZATIONS_OF_DOCTORS> _SPECIALIZATIONS_OF_DOCTORS;
		
		private EntitySet<DOCTOR_OPENTIMES> _DOCTOR_OPENTIMES;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onuser_nameChanging(string value);
    partial void Onuser_nameChanged();
    partial void Onnative_nameChanging(string value);
    partial void Onnative_nameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OngenderChanging(string value);
    partial void OngenderChanged();
    partial void OnbirthdayChanging(System.Nullable<System.DateTime> value);
    partial void OnbirthdayChanged();
    partial void Onstart_year_of_workChanging(System.Nullable<System.DateTime> value);
    partial void Onstart_year_of_workChanged();
    #endregion
		
		public DOCTORS()
		{
			this._APPLICATIONS = new EntitySet<APPLICATIONS>(new Action<APPLICATIONS>(this.attach_APPLICATIONS), new Action<APPLICATIONS>(this.detach_APPLICATIONS));
			this._SPECIALIZATIONS_OF_DOCTORS = new EntitySet<SPECIALIZATIONS_OF_DOCTORS>(new Action<SPECIALIZATIONS_OF_DOCTORS>(this.attach_SPECIALIZATIONS_OF_DOCTORS), new Action<SPECIALIZATIONS_OF_DOCTORS>(this.detach_SPECIALIZATIONS_OF_DOCTORS));
			this._DOCTOR_OPENTIMES = new EntitySet<DOCTOR_OPENTIMES>(new Action<DOCTOR_OPENTIMES>(this.attach_DOCTOR_OPENTIMES), new Action<DOCTOR_OPENTIMES>(this.detach_DOCTOR_OPENTIMES));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_name", DbType="VarChar(100)")]
		public string user_name
		{
			get
			{
				return this._user_name;
			}
			set
			{
				if ((this._user_name != value))
				{
					this.Onuser_nameChanging(value);
					this.SendPropertyChanging();
					this._user_name = value;
					this.SendPropertyChanged("user_name");
					this.Onuser_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_native_name", DbType="VarChar(100)")]
		public string native_name
		{
			get
			{
				return this._native_name;
			}
			set
			{
				if ((this._native_name != value))
				{
					this.Onnative_nameChanging(value);
					this.SendPropertyChanging();
					this._native_name = value;
					this.SendPropertyChanged("native_name");
					this.Onnative_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(200)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gender", DbType="VarChar(50)")]
		public string gender
		{
			get
			{
				return this._gender;
			}
			set
			{
				if ((this._gender != value))
				{
					this.OngenderChanging(value);
					this.SendPropertyChanging();
					this._gender = value;
					this.SendPropertyChanged("gender");
					this.OngenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_birthday", DbType="Date")]
		public System.Nullable<System.DateTime> birthday
		{
			get
			{
				return this._birthday;
			}
			set
			{
				if ((this._birthday != value))
				{
					this.OnbirthdayChanging(value);
					this.SendPropertyChanging();
					this._birthday = value;
					this.SendPropertyChanged("birthday");
					this.OnbirthdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_start_year_of_work", DbType="Date")]
		public System.Nullable<System.DateTime> start_year_of_work
		{
			get
			{
				return this._start_year_of_work;
			}
			set
			{
				if ((this._start_year_of_work != value))
				{
					this.Onstart_year_of_workChanging(value);
					this.SendPropertyChanging();
					this._start_year_of_work = value;
					this.SendPropertyChanged("start_year_of_work");
					this.Onstart_year_of_workChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DOCTORS_APPLICATIONS", Storage="_APPLICATIONS", ThisKey="id", OtherKey="doctor_id")]
		public EntitySet<APPLICATIONS> APPLICATIONS
		{
			get
			{
				return this._APPLICATIONS;
			}
			set
			{
				this._APPLICATIONS.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DOCTORS_SPECIALIZATIONS_OF_DOCTORS", Storage="_SPECIALIZATIONS_OF_DOCTORS", ThisKey="id", OtherKey="doctor_id")]
		public EntitySet<SPECIALIZATIONS_OF_DOCTORS> SPECIALIZATIONS_OF_DOCTORS
		{
			get
			{
				return this._SPECIALIZATIONS_OF_DOCTORS;
			}
			set
			{
				this._SPECIALIZATIONS_OF_DOCTORS.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DOCTORS_DOCTOR_OPENTIME", Storage="_DOCTOR_OPENTIMES", ThisKey="id", OtherKey="doctor_id")]
		public EntitySet<DOCTOR_OPENTIMES> DOCTOR_OPENTIMES
		{
			get
			{
				return this._DOCTOR_OPENTIMES;
			}
			set
			{
				this._DOCTOR_OPENTIMES.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_APPLICATIONS(APPLICATIONS entity)
		{
			this.SendPropertyChanging();
			entity.DOCTORS = this;
		}
		
		private void detach_APPLICATIONS(APPLICATIONS entity)
		{
			this.SendPropertyChanging();
			entity.DOCTORS = null;
		}
		
		private void attach_SPECIALIZATIONS_OF_DOCTORS(SPECIALIZATIONS_OF_DOCTORS entity)
		{
			this.SendPropertyChanging();
			entity.DOCTORS = this;
		}
		
		private void detach_SPECIALIZATIONS_OF_DOCTORS(SPECIALIZATIONS_OF_DOCTORS entity)
		{
			this.SendPropertyChanging();
			entity.DOCTORS = null;
		}
		
		private void attach_DOCTOR_OPENTIMES(DOCTOR_OPENTIMES entity)
		{
			this.SendPropertyChanging();
			entity.DOCTORS = this;
		}
		
		private void detach_DOCTOR_OPENTIMES(DOCTOR_OPENTIMES entity)
		{
			this.SendPropertyChanging();
			entity.DOCTORS = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EXAMINATIONS")]
	public partial class EXAMINATIONS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _application_id;
		
		private string _notes;
		
		private string _doucments_path;
		
		private EntitySet<PRESCRIPTIONS> _PRESCRIPTIONS;
		
		private EntityRef<APPLICATIONS> _APPLICATIONS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onapplication_idChanging(System.Nullable<int> value);
    partial void Onapplication_idChanged();
    partial void OnnotesChanging(string value);
    partial void OnnotesChanged();
    partial void Ondoucments_pathChanging(string value);
    partial void Ondoucments_pathChanged();
    #endregion
		
		public EXAMINATIONS()
		{
			this._PRESCRIPTIONS = new EntitySet<PRESCRIPTIONS>(new Action<PRESCRIPTIONS>(this.attach_PRESCRIPTIONS), new Action<PRESCRIPTIONS>(this.detach_PRESCRIPTIONS));
			this._APPLICATIONS = default(EntityRef<APPLICATIONS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_application_id", DbType="Int")]
		public System.Nullable<int> application_id
		{
			get
			{
				return this._application_id;
			}
			set
			{
				if ((this._application_id != value))
				{
					if (this._APPLICATIONS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onapplication_idChanging(value);
					this.SendPropertyChanging();
					this._application_id = value;
					this.SendPropertyChanged("application_id");
					this.Onapplication_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_notes", DbType="VarChar(500)")]
		public string notes
		{
			get
			{
				return this._notes;
			}
			set
			{
				if ((this._notes != value))
				{
					this.OnnotesChanging(value);
					this.SendPropertyChanging();
					this._notes = value;
					this.SendPropertyChanged("notes");
					this.OnnotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_doucments_path", DbType="VarChar(500)")]
		public string doucments_path
		{
			get
			{
				return this._doucments_path;
			}
			set
			{
				if ((this._doucments_path != value))
				{
					this.Ondoucments_pathChanging(value);
					this.SendPropertyChanging();
					this._doucments_path = value;
					this.SendPropertyChanged("doucments_path");
					this.Ondoucments_pathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EXAMINATIONS_PRESCRIPTIONS", Storage="_PRESCRIPTIONS", ThisKey="id", OtherKey="examination_id")]
		public EntitySet<PRESCRIPTIONS> PRESCRIPTIONS
		{
			get
			{
				return this._PRESCRIPTIONS;
			}
			set
			{
				this._PRESCRIPTIONS.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="APPLICATIONS_EXAMINATIONS", Storage="_APPLICATIONS", ThisKey="application_id", OtherKey="id", IsForeignKey=true)]
		public APPLICATIONS APPLICATIONS
		{
			get
			{
				return this._APPLICATIONS.Entity;
			}
			set
			{
				APPLICATIONS previousValue = this._APPLICATIONS.Entity;
				if (((previousValue != value) 
							|| (this._APPLICATIONS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._APPLICATIONS.Entity = null;
						previousValue.EXAMINATIONS.Remove(this);
					}
					this._APPLICATIONS.Entity = value;
					if ((value != null))
					{
						value.EXAMINATIONS.Add(this);
						this._application_id = value.id;
					}
					else
					{
						this._application_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("APPLICATIONS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PRESCRIPTIONS(PRESCRIPTIONS entity)
		{
			this.SendPropertyChanging();
			entity.EXAMINATIONS = this;
		}
		
		private void detach_PRESCRIPTIONS(PRESCRIPTIONS entity)
		{
			this.SendPropertyChanging();
			entity.EXAMINATIONS = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ORDERS")]
	public partial class ORDERS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _prescription_id;
		
		private System.Nullable<int> _pharmacy_id;
		
		private string _notes;
		
		private string _type;
		
		private EntityRef<PHARMACISTS> _PHARMACISTS;
		
		private EntityRef<PRESCRIPTIONS> _PRESCRIPTIONS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onprescription_idChanging(System.Nullable<int> value);
    partial void Onprescription_idChanged();
    partial void Onpharmacy_idChanging(System.Nullable<int> value);
    partial void Onpharmacy_idChanged();
    partial void OnnotesChanging(string value);
    partial void OnnotesChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    #endregion
		
		public ORDERS()
		{
			this._PHARMACISTS = default(EntityRef<PHARMACISTS>);
			this._PRESCRIPTIONS = default(EntityRef<PRESCRIPTIONS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prescription_id", DbType="Int")]
		public System.Nullable<int> prescription_id
		{
			get
			{
				return this._prescription_id;
			}
			set
			{
				if ((this._prescription_id != value))
				{
					if (this._PRESCRIPTIONS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onprescription_idChanging(value);
					this.SendPropertyChanging();
					this._prescription_id = value;
					this.SendPropertyChanged("prescription_id");
					this.Onprescription_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pharmacy_id", DbType="Int")]
		public System.Nullable<int> pharmacy_id
		{
			get
			{
				return this._pharmacy_id;
			}
			set
			{
				if ((this._pharmacy_id != value))
				{
					if (this._PHARMACISTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpharmacy_idChanging(value);
					this.SendPropertyChanging();
					this._pharmacy_id = value;
					this.SendPropertyChanged("pharmacy_id");
					this.Onpharmacy_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_notes", DbType="VarChar(500)")]
		public string notes
		{
			get
			{
				return this._notes;
			}
			set
			{
				if ((this._notes != value))
				{
					this.OnnotesChanging(value);
					this.SendPropertyChanging();
					this._notes = value;
					this.SendPropertyChanged("notes");
					this.OnnotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="VarChar(500)")]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHARMACISTS_ORDERS", Storage="_PHARMACISTS", ThisKey="pharmacy_id", OtherKey="id", IsForeignKey=true)]
		public PHARMACISTS PHARMACISTS
		{
			get
			{
				return this._PHARMACISTS.Entity;
			}
			set
			{
				PHARMACISTS previousValue = this._PHARMACISTS.Entity;
				if (((previousValue != value) 
							|| (this._PHARMACISTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHARMACISTS.Entity = null;
						previousValue.ORDERS.Remove(this);
					}
					this._PHARMACISTS.Entity = value;
					if ((value != null))
					{
						value.ORDERS.Add(this);
						this._pharmacy_id = value.id;
					}
					else
					{
						this._pharmacy_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("PHARMACISTS");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRESCRIPTIONS_ORDERS", Storage="_PRESCRIPTIONS", ThisKey="prescription_id", OtherKey="id", IsForeignKey=true)]
		public PRESCRIPTIONS PRESCRIPTIONS
		{
			get
			{
				return this._PRESCRIPTIONS.Entity;
			}
			set
			{
				PRESCRIPTIONS previousValue = this._PRESCRIPTIONS.Entity;
				if (((previousValue != value) 
							|| (this._PRESCRIPTIONS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PRESCRIPTIONS.Entity = null;
						previousValue.ORDERS.Remove(this);
					}
					this._PRESCRIPTIONS.Entity = value;
					if ((value != null))
					{
						value.ORDERS.Add(this);
						this._prescription_id = value.id;
					}
					else
					{
						this._prescription_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("PRESCRIPTIONS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHARMACIST_HOLIDAYS")]
	public partial class PHARMACIST_HOLIDAYS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _pharmacy_id;
		
		private System.Nullable<System.DateTime> _date;
		
		private System.Nullable<System.TimeSpan> _away_start;
		
		private System.Nullable<System.TimeSpan> _away_close;
		
		private EntityRef<PHARMACISTS> _PHARMACISTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onpharmacy_idChanging(System.Nullable<int> value);
    partial void Onpharmacy_idChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    partial void Onaway_startChanging(System.Nullable<System.TimeSpan> value);
    partial void Onaway_startChanged();
    partial void Onaway_closeChanging(System.Nullable<System.TimeSpan> value);
    partial void Onaway_closeChanged();
    #endregion
		
		public PHARMACIST_HOLIDAYS()
		{
			this._PHARMACISTS = default(EntityRef<PHARMACISTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pharmacy_id", DbType="Int")]
		public System.Nullable<int> pharmacy_id
		{
			get
			{
				return this._pharmacy_id;
			}
			set
			{
				if ((this._pharmacy_id != value))
				{
					if (this._PHARMACISTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpharmacy_idChanging(value);
					this.SendPropertyChanging();
					this._pharmacy_id = value;
					this.SendPropertyChanged("pharmacy_id");
					this.Onpharmacy_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="Date")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_away_start", DbType="Time")]
		public System.Nullable<System.TimeSpan> away_start
		{
			get
			{
				return this._away_start;
			}
			set
			{
				if ((this._away_start != value))
				{
					this.Onaway_startChanging(value);
					this.SendPropertyChanging();
					this._away_start = value;
					this.SendPropertyChanged("away_start");
					this.Onaway_startChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_away_close", DbType="Time")]
		public System.Nullable<System.TimeSpan> away_close
		{
			get
			{
				return this._away_close;
			}
			set
			{
				if ((this._away_close != value))
				{
					this.Onaway_closeChanging(value);
					this.SendPropertyChanging();
					this._away_close = value;
					this.SendPropertyChanged("away_close");
					this.Onaway_closeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHARMACISTS_PHARMACIST_HOLIDAYS", Storage="_PHARMACISTS", ThisKey="pharmacy_id", OtherKey="id", IsForeignKey=true)]
		public PHARMACISTS PHARMACISTS
		{
			get
			{
				return this._PHARMACISTS.Entity;
			}
			set
			{
				PHARMACISTS previousValue = this._PHARMACISTS.Entity;
				if (((previousValue != value) 
							|| (this._PHARMACISTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHARMACISTS.Entity = null;
						previousValue.PHARMACIST_HOLIDAYS.Remove(this);
					}
					this._PHARMACISTS.Entity = value;
					if ((value != null))
					{
						value.PHARMACIST_HOLIDAYS.Add(this);
						this._pharmacy_id = value.id;
					}
					else
					{
						this._pharmacy_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("PHARMACISTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHARMACIST_OPENTIMES")]
	public partial class PHARMACIST_OPENTIMES : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _pharmacy_id;
		
		private string _day_of_the_week;
		
		private System.Nullable<System.TimeSpan> _opentime;
		
		private System.Nullable<System.TimeSpan> _closetime;
		
		private EntityRef<PHARMACISTS> _PHARMACISTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onpharmacy_idChanging(System.Nullable<int> value);
    partial void Onpharmacy_idChanged();
    partial void Onday_of_the_weekChanging(string value);
    partial void Onday_of_the_weekChanged();
    partial void OnopentimeChanging(System.Nullable<System.TimeSpan> value);
    partial void OnopentimeChanged();
    partial void OnclosetimeChanging(System.Nullable<System.TimeSpan> value);
    partial void OnclosetimeChanged();
    #endregion
		
		public PHARMACIST_OPENTIMES()
		{
			this._PHARMACISTS = default(EntityRef<PHARMACISTS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pharmacy_id", DbType="Int")]
		public System.Nullable<int> pharmacy_id
		{
			get
			{
				return this._pharmacy_id;
			}
			set
			{
				if ((this._pharmacy_id != value))
				{
					if (this._PHARMACISTS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpharmacy_idChanging(value);
					this.SendPropertyChanging();
					this._pharmacy_id = value;
					this.SendPropertyChanged("pharmacy_id");
					this.Onpharmacy_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_day_of_the_week", DbType="VarChar(100)")]
		public string day_of_the_week
		{
			get
			{
				return this._day_of_the_week;
			}
			set
			{
				if ((this._day_of_the_week != value))
				{
					this.Onday_of_the_weekChanging(value);
					this.SendPropertyChanging();
					this._day_of_the_week = value;
					this.SendPropertyChanged("day_of_the_week");
					this.Onday_of_the_weekChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_opentime", DbType="Time")]
		public System.Nullable<System.TimeSpan> opentime
		{
			get
			{
				return this._opentime;
			}
			set
			{
				if ((this._opentime != value))
				{
					this.OnopentimeChanging(value);
					this.SendPropertyChanging();
					this._opentime = value;
					this.SendPropertyChanged("opentime");
					this.OnopentimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_closetime", DbType="Time")]
		public System.Nullable<System.TimeSpan> closetime
		{
			get
			{
				return this._closetime;
			}
			set
			{
				if ((this._closetime != value))
				{
					this.OnclosetimeChanging(value);
					this.SendPropertyChanging();
					this._closetime = value;
					this.SendPropertyChanged("closetime");
					this.OnclosetimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHARMACISTS_PHARMACIST_OPENTIMES", Storage="_PHARMACISTS", ThisKey="pharmacy_id", OtherKey="id", IsForeignKey=true)]
		public PHARMACISTS PHARMACISTS
		{
			get
			{
				return this._PHARMACISTS.Entity;
			}
			set
			{
				PHARMACISTS previousValue = this._PHARMACISTS.Entity;
				if (((previousValue != value) 
							|| (this._PHARMACISTS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHARMACISTS.Entity = null;
						previousValue.PHARMACIST_OPENTIMES.Remove(this);
					}
					this._PHARMACISTS.Entity = value;
					if ((value != null))
					{
						value.PHARMACIST_OPENTIMES.Add(this);
						this._pharmacy_id = value.id;
					}
					else
					{
						this._pharmacy_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("PHARMACISTS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHARMACISTS")]
	public partial class PHARMACISTS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _user_name;
		
		private string _native_name;
		
		private string _password;
		
		private System.Nullable<bool> _support_delivery;
		
		private System.Nullable<bool> _support_preorder;
		
		private string _country;
		
		private string _city;
		
		private System.Nullable<int> _postal_code;
		
		private string _address;
		
		private EntitySet<ORDERS> _ORDERS;
		
		private EntitySet<PHARMACIST_HOLIDAYS> _PHARMACIST_HOLIDAYS;
		
		private EntitySet<PHARMACIST_OPENTIMES> _PHARMACIST_OPENTIMES;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onuser_nameChanging(string value);
    partial void Onuser_nameChanged();
    partial void Onnative_nameChanging(string value);
    partial void Onnative_nameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void Onsupport_deliveryChanging(System.Nullable<bool> value);
    partial void Onsupport_deliveryChanged();
    partial void Onsupport_preorderChanging(System.Nullable<bool> value);
    partial void Onsupport_preorderChanged();
    partial void OncountryChanging(string value);
    partial void OncountryChanged();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void Onpostal_codeChanging(System.Nullable<int> value);
    partial void Onpostal_codeChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    #endregion
		
		public PHARMACISTS()
		{
			this._ORDERS = new EntitySet<ORDERS>(new Action<ORDERS>(this.attach_ORDERS), new Action<ORDERS>(this.detach_ORDERS));
			this._PHARMACIST_HOLIDAYS = new EntitySet<PHARMACIST_HOLIDAYS>(new Action<PHARMACIST_HOLIDAYS>(this.attach_PHARMACIST_HOLIDAYS), new Action<PHARMACIST_HOLIDAYS>(this.detach_PHARMACIST_HOLIDAYS));
			this._PHARMACIST_OPENTIMES = new EntitySet<PHARMACIST_OPENTIMES>(new Action<PHARMACIST_OPENTIMES>(this.attach_PHARMACIST_OPENTIMES), new Action<PHARMACIST_OPENTIMES>(this.detach_PHARMACIST_OPENTIMES));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_name", DbType="VarChar(100)")]
		public string user_name
		{
			get
			{
				return this._user_name;
			}
			set
			{
				if ((this._user_name != value))
				{
					this.Onuser_nameChanging(value);
					this.SendPropertyChanging();
					this._user_name = value;
					this.SendPropertyChanged("user_name");
					this.Onuser_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_native_name", DbType="VarChar(100)")]
		public string native_name
		{
			get
			{
				return this._native_name;
			}
			set
			{
				if ((this._native_name != value))
				{
					this.Onnative_nameChanging(value);
					this.SendPropertyChanging();
					this._native_name = value;
					this.SendPropertyChanged("native_name");
					this.Onnative_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(200)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_support_delivery", DbType="Bit")]
		public System.Nullable<bool> support_delivery
		{
			get
			{
				return this._support_delivery;
			}
			set
			{
				if ((this._support_delivery != value))
				{
					this.Onsupport_deliveryChanging(value);
					this.SendPropertyChanging();
					this._support_delivery = value;
					this.SendPropertyChanged("support_delivery");
					this.Onsupport_deliveryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_support_preorder", DbType="Bit")]
		public System.Nullable<bool> support_preorder
		{
			get
			{
				return this._support_preorder;
			}
			set
			{
				if ((this._support_preorder != value))
				{
					this.Onsupport_preorderChanging(value);
					this.SendPropertyChanging();
					this._support_preorder = value;
					this.SendPropertyChanged("support_preorder");
					this.Onsupport_preorderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_country", DbType="VarChar(100)")]
		public string country
		{
			get
			{
				return this._country;
			}
			set
			{
				if ((this._country != value))
				{
					this.OncountryChanging(value);
					this.SendPropertyChanging();
					this._country = value;
					this.SendPropertyChanged("country");
					this.OncountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="VarChar(100)")]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_postal_code", DbType="Int")]
		public System.Nullable<int> postal_code
		{
			get
			{
				return this._postal_code;
			}
			set
			{
				if ((this._postal_code != value))
				{
					this.Onpostal_codeChanging(value);
					this.SendPropertyChanging();
					this._postal_code = value;
					this.SendPropertyChanged("postal_code");
					this.Onpostal_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="VarChar(200)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHARMACISTS_ORDERS", Storage="_ORDERS", ThisKey="id", OtherKey="pharmacy_id")]
		public EntitySet<ORDERS> ORDERS
		{
			get
			{
				return this._ORDERS;
			}
			set
			{
				this._ORDERS.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHARMACISTS_PHARMACIST_HOLIDAYS", Storage="_PHARMACIST_HOLIDAYS", ThisKey="id", OtherKey="pharmacy_id")]
		public EntitySet<PHARMACIST_HOLIDAYS> PHARMACIST_HOLIDAYS
		{
			get
			{
				return this._PHARMACIST_HOLIDAYS;
			}
			set
			{
				this._PHARMACIST_HOLIDAYS.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHARMACISTS_PHARMACIST_OPENTIMES", Storage="_PHARMACIST_OPENTIMES", ThisKey="id", OtherKey="pharmacy_id")]
		public EntitySet<PHARMACIST_OPENTIMES> PHARMACIST_OPENTIMES
		{
			get
			{
				return this._PHARMACIST_OPENTIMES;
			}
			set
			{
				this._PHARMACIST_OPENTIMES.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ORDERS(ORDERS entity)
		{
			this.SendPropertyChanging();
			entity.PHARMACISTS = this;
		}
		
		private void detach_ORDERS(ORDERS entity)
		{
			this.SendPropertyChanging();
			entity.PHARMACISTS = null;
		}
		
		private void attach_PHARMACIST_HOLIDAYS(PHARMACIST_HOLIDAYS entity)
		{
			this.SendPropertyChanging();
			entity.PHARMACISTS = this;
		}
		
		private void detach_PHARMACIST_HOLIDAYS(PHARMACIST_HOLIDAYS entity)
		{
			this.SendPropertyChanging();
			entity.PHARMACISTS = null;
		}
		
		private void attach_PHARMACIST_OPENTIMES(PHARMACIST_OPENTIMES entity)
		{
			this.SendPropertyChanging();
			entity.PHARMACISTS = this;
		}
		
		private void detach_PHARMACIST_OPENTIMES(PHARMACIST_OPENTIMES entity)
		{
			this.SendPropertyChanging();
			entity.PHARMACISTS = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PRESCRIPTIONS")]
	public partial class PRESCRIPTIONS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _examination_id;
		
		private string _notes;
		
		private string _doucments_path;
		
		private EntitySet<ORDERS> _ORDERS;
		
		private EntityRef<EXAMINATIONS> _EXAMINATIONS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onexamination_idChanging(System.Nullable<int> value);
    partial void Onexamination_idChanged();
    partial void OnnotesChanging(string value);
    partial void OnnotesChanged();
    partial void Ondoucments_pathChanging(string value);
    partial void Ondoucments_pathChanged();
    #endregion
		
		public PRESCRIPTIONS()
		{
			this._ORDERS = new EntitySet<ORDERS>(new Action<ORDERS>(this.attach_ORDERS), new Action<ORDERS>(this.detach_ORDERS));
			this._EXAMINATIONS = default(EntityRef<EXAMINATIONS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_examination_id", DbType="Int")]
		public System.Nullable<int> examination_id
		{
			get
			{
				return this._examination_id;
			}
			set
			{
				if ((this._examination_id != value))
				{
					if (this._EXAMINATIONS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onexamination_idChanging(value);
					this.SendPropertyChanging();
					this._examination_id = value;
					this.SendPropertyChanged("examination_id");
					this.Onexamination_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_notes", DbType="VarChar(500)")]
		public string notes
		{
			get
			{
				return this._notes;
			}
			set
			{
				if ((this._notes != value))
				{
					this.OnnotesChanging(value);
					this.SendPropertyChanging();
					this._notes = value;
					this.SendPropertyChanged("notes");
					this.OnnotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_doucments_path", DbType="VarChar(500)")]
		public string doucments_path
		{
			get
			{
				return this._doucments_path;
			}
			set
			{
				if ((this._doucments_path != value))
				{
					this.Ondoucments_pathChanging(value);
					this.SendPropertyChanging();
					this._doucments_path = value;
					this.SendPropertyChanged("doucments_path");
					this.Ondoucments_pathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRESCRIPTIONS_ORDERS", Storage="_ORDERS", ThisKey="id", OtherKey="prescription_id")]
		public EntitySet<ORDERS> ORDERS
		{
			get
			{
				return this._ORDERS;
			}
			set
			{
				this._ORDERS.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EXAMINATIONS_PRESCRIPTIONS", Storage="_EXAMINATIONS", ThisKey="examination_id", OtherKey="id", IsForeignKey=true)]
		public EXAMINATIONS EXAMINATIONS
		{
			get
			{
				return this._EXAMINATIONS.Entity;
			}
			set
			{
				EXAMINATIONS previousValue = this._EXAMINATIONS.Entity;
				if (((previousValue != value) 
							|| (this._EXAMINATIONS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EXAMINATIONS.Entity = null;
						previousValue.PRESCRIPTIONS.Remove(this);
					}
					this._EXAMINATIONS.Entity = value;
					if ((value != null))
					{
						value.PRESCRIPTIONS.Add(this);
						this._examination_id = value.id;
					}
					else
					{
						this._examination_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("EXAMINATIONS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ORDERS(ORDERS entity)
		{
			this.SendPropertyChanging();
			entity.PRESCRIPTIONS = this;
		}
		
		private void detach_ORDERS(ORDERS entity)
		{
			this.SendPropertyChanging();
			entity.PRESCRIPTIONS = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SPECIALIZATIONS")]
	public partial class SPECIALIZATIONS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _description;
		
		private EntitySet<SPECIALIZATIONS_OF_DOCTORS> _SPECIALIZATIONS_OF_DOCTORS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public SPECIALIZATIONS()
		{
			this._SPECIALIZATIONS_OF_DOCTORS = new EntitySet<SPECIALIZATIONS_OF_DOCTORS>(new Action<SPECIALIZATIONS_OF_DOCTORS>(this.attach_SPECIALIZATIONS_OF_DOCTORS), new Action<SPECIALIZATIONS_OF_DOCTORS>(this.detach_SPECIALIZATIONS_OF_DOCTORS));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(100)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(500)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SPECIALIZATIONS_SPECIALIZATIONS_OF_DOCTORS", Storage="_SPECIALIZATIONS_OF_DOCTORS", ThisKey="id", OtherKey="specicalization_id")]
		public EntitySet<SPECIALIZATIONS_OF_DOCTORS> SPECIALIZATIONS_OF_DOCTORS
		{
			get
			{
				return this._SPECIALIZATIONS_OF_DOCTORS;
			}
			set
			{
				this._SPECIALIZATIONS_OF_DOCTORS.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SPECIALIZATIONS_OF_DOCTORS(SPECIALIZATIONS_OF_DOCTORS entity)
		{
			this.SendPropertyChanging();
			entity.SPECIALIZATIONS = this;
		}
		
		private void detach_SPECIALIZATIONS_OF_DOCTORS(SPECIALIZATIONS_OF_DOCTORS entity)
		{
			this.SendPropertyChanging();
			entity.SPECIALIZATIONS = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SPECIALIZATIONS_OF_DOCTORS")]
	public partial class SPECIALIZATIONS_OF_DOCTORS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _doctor_id;
		
		private System.Nullable<int> _specicalization_id;
		
		private EntityRef<DOCTORS> _DOCTORS;
		
		private EntityRef<SPECIALIZATIONS> _SPECIALIZATIONS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Ondoctor_idChanging(System.Nullable<int> value);
    partial void Ondoctor_idChanged();
    partial void Onspecicalization_idChanging(System.Nullable<int> value);
    partial void Onspecicalization_idChanged();
    #endregion
		
		public SPECIALIZATIONS_OF_DOCTORS()
		{
			this._DOCTORS = default(EntityRef<DOCTORS>);
			this._SPECIALIZATIONS = default(EntityRef<SPECIALIZATIONS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_doctor_id", DbType="Int")]
		public System.Nullable<int> doctor_id
		{
			get
			{
				return this._doctor_id;
			}
			set
			{
				if ((this._doctor_id != value))
				{
					if (this._DOCTORS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondoctor_idChanging(value);
					this.SendPropertyChanging();
					this._doctor_id = value;
					this.SendPropertyChanged("doctor_id");
					this.Ondoctor_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_specicalization_id", DbType="Int")]
		public System.Nullable<int> specicalization_id
		{
			get
			{
				return this._specicalization_id;
			}
			set
			{
				if ((this._specicalization_id != value))
				{
					if (this._SPECIALIZATIONS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onspecicalization_idChanging(value);
					this.SendPropertyChanging();
					this._specicalization_id = value;
					this.SendPropertyChanged("specicalization_id");
					this.Onspecicalization_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DOCTORS_SPECIALIZATIONS_OF_DOCTORS", Storage="_DOCTORS", ThisKey="doctor_id", OtherKey="id", IsForeignKey=true)]
		public DOCTORS DOCTORS
		{
			get
			{
				return this._DOCTORS.Entity;
			}
			set
			{
				DOCTORS previousValue = this._DOCTORS.Entity;
				if (((previousValue != value) 
							|| (this._DOCTORS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DOCTORS.Entity = null;
						previousValue.SPECIALIZATIONS_OF_DOCTORS.Remove(this);
					}
					this._DOCTORS.Entity = value;
					if ((value != null))
					{
						value.SPECIALIZATIONS_OF_DOCTORS.Add(this);
						this._doctor_id = value.id;
					}
					else
					{
						this._doctor_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("DOCTORS");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SPECIALIZATIONS_SPECIALIZATIONS_OF_DOCTORS", Storage="_SPECIALIZATIONS", ThisKey="specicalization_id", OtherKey="id", IsForeignKey=true)]
		public SPECIALIZATIONS SPECIALIZATIONS
		{
			get
			{
				return this._SPECIALIZATIONS.Entity;
			}
			set
			{
				SPECIALIZATIONS previousValue = this._SPECIALIZATIONS.Entity;
				if (((previousValue != value) 
							|| (this._SPECIALIZATIONS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SPECIALIZATIONS.Entity = null;
						previousValue.SPECIALIZATIONS_OF_DOCTORS.Remove(this);
					}
					this._SPECIALIZATIONS.Entity = value;
					if ((value != null))
					{
						value.SPECIALIZATIONS_OF_DOCTORS.Add(this);
						this._specicalization_id = value.id;
					}
					else
					{
						this._specicalization_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("SPECIALIZATIONS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SYSTEM_ADMINS")]
	public partial class SYSTEM_ADMINS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _user_name;
		
		private string _native_name;
		
		private string _password;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onuser_nameChanging(string value);
    partial void Onuser_nameChanged();
    partial void Onnative_nameChanging(string value);
    partial void Onnative_nameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    #endregion
		
		public SYSTEM_ADMINS()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_name", DbType="VarChar(100)")]
		public string user_name
		{
			get
			{
				return this._user_name;
			}
			set
			{
				if ((this._user_name != value))
				{
					this.Onuser_nameChanging(value);
					this.SendPropertyChanging();
					this._user_name = value;
					this.SendPropertyChanged("user_name");
					this.Onuser_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_native_name", DbType="VarChar(100)")]
		public string native_name
		{
			get
			{
				return this._native_name;
			}
			set
			{
				if ((this._native_name != value))
				{
					this.Onnative_nameChanging(value);
					this.SendPropertyChanging();
					this._native_name = value;
					this.SendPropertyChanged("native_name");
					this.Onnative_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(200)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PATIENTS")]
	public partial class PATIENTS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _user_name;
		
		private string _native_name;
		
		private string _password;
		
		private string _gender;
		
		private System.Nullable<System.DateTime> _birthday;
		
		private System.Nullable<double> _weight;
		
		private string _country;
		
		private string _city;
		
		private System.Nullable<int> _postal_code;
		
		private string _address;
		
		private System.Nullable<bool> _is_accepted;
		
		private string _medical_form_path;
		
		private EntitySet<APPLICATIONS> _APPLICATIONS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onuser_nameChanging(string value);
    partial void Onuser_nameChanged();
    partial void Onnative_nameChanging(string value);
    partial void Onnative_nameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OngenderChanging(string value);
    partial void OngenderChanged();
    partial void OnbirthdayChanging(System.Nullable<System.DateTime> value);
    partial void OnbirthdayChanged();
    partial void OnweightChanging(System.Nullable<double> value);
    partial void OnweightChanged();
    partial void OncountryChanging(string value);
    partial void OncountryChanged();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void Onpostal_codeChanging(System.Nullable<int> value);
    partial void Onpostal_codeChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void Onis_acceptedChanging(System.Nullable<bool> value);
    partial void Onis_acceptedChanged();
    partial void Onmedical_form_pathChanging(string value);
    partial void Onmedical_form_pathChanged();
    #endregion
		
		public PATIENTS()
		{
			this._APPLICATIONS = new EntitySet<APPLICATIONS>(new Action<APPLICATIONS>(this.attach_APPLICATIONS), new Action<APPLICATIONS>(this.detach_APPLICATIONS));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_name", DbType="VarChar(100)")]
		public string user_name
		{
			get
			{
				return this._user_name;
			}
			set
			{
				if ((this._user_name != value))
				{
					this.Onuser_nameChanging(value);
					this.SendPropertyChanging();
					this._user_name = value;
					this.SendPropertyChanged("user_name");
					this.Onuser_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_native_name", DbType="VarChar(100)")]
		public string native_name
		{
			get
			{
				return this._native_name;
			}
			set
			{
				if ((this._native_name != value))
				{
					this.Onnative_nameChanging(value);
					this.SendPropertyChanging();
					this._native_name = value;
					this.SendPropertyChanged("native_name");
					this.Onnative_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(200)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gender", DbType="VarChar(50)")]
		public string gender
		{
			get
			{
				return this._gender;
			}
			set
			{
				if ((this._gender != value))
				{
					this.OngenderChanging(value);
					this.SendPropertyChanging();
					this._gender = value;
					this.SendPropertyChanged("gender");
					this.OngenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_birthday", DbType="Date")]
		public System.Nullable<System.DateTime> birthday
		{
			get
			{
				return this._birthday;
			}
			set
			{
				if ((this._birthday != value))
				{
					this.OnbirthdayChanging(value);
					this.SendPropertyChanging();
					this._birthday = value;
					this.SendPropertyChanged("birthday");
					this.OnbirthdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_weight", DbType="Float")]
		public System.Nullable<double> weight
		{
			get
			{
				return this._weight;
			}
			set
			{
				if ((this._weight != value))
				{
					this.OnweightChanging(value);
					this.SendPropertyChanging();
					this._weight = value;
					this.SendPropertyChanged("weight");
					this.OnweightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_country", DbType="VarChar(100)")]
		public string country
		{
			get
			{
				return this._country;
			}
			set
			{
				if ((this._country != value))
				{
					this.OncountryChanging(value);
					this.SendPropertyChanging();
					this._country = value;
					this.SendPropertyChanged("country");
					this.OncountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="VarChar(100)")]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_postal_code", DbType="Int")]
		public System.Nullable<int> postal_code
		{
			get
			{
				return this._postal_code;
			}
			set
			{
				if ((this._postal_code != value))
				{
					this.Onpostal_codeChanging(value);
					this.SendPropertyChanging();
					this._postal_code = value;
					this.SendPropertyChanged("postal_code");
					this.Onpostal_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="VarChar(200)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_accepted", DbType="Bit")]
		public System.Nullable<bool> is_accepted
		{
			get
			{
				return this._is_accepted;
			}
			set
			{
				if ((this._is_accepted != value))
				{
					this.Onis_acceptedChanging(value);
					this.SendPropertyChanging();
					this._is_accepted = value;
					this.SendPropertyChanged("is_accepted");
					this.Onis_acceptedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_medical_form_path", DbType="VarChar(500)")]
		public string medical_form_path
		{
			get
			{
				return this._medical_form_path;
			}
			set
			{
				if ((this._medical_form_path != value))
				{
					this.Onmedical_form_pathChanging(value);
					this.SendPropertyChanging();
					this._medical_form_path = value;
					this.SendPropertyChanged("medical_form_path");
					this.Onmedical_form_pathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PATIENTS_APPLICATIONS", Storage="_APPLICATIONS", ThisKey="id", OtherKey="patient_id")]
		public EntitySet<APPLICATIONS> APPLICATIONS
		{
			get
			{
				return this._APPLICATIONS;
			}
			set
			{
				this._APPLICATIONS.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_APPLICATIONS(APPLICATIONS entity)
		{
			this.SendPropertyChanging();
			entity.PATIENTS = this;
		}
		
		private void detach_APPLICATIONS(APPLICATIONS entity)
		{
			this.SendPropertyChanging();
			entity.PATIENTS = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DOCTOR_OPENTIMES")]
	public partial class DOCTOR_OPENTIMES : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _doctor_id;
		
		private System.Nullable<System.DateTime> _end;
		
		private System.Nullable<System.DateTime> _start;
		
		private System.Nullable<bool> _is_free;
		
		private System.Nullable<bool> _is_accepted;
		
		private EntityRef<DOCTORS> _DOCTORS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Ondoctor_idChanging(System.Nullable<int> value);
    partial void Ondoctor_idChanged();
    partial void OnendChanging(System.Nullable<System.DateTime> value);
    partial void OnendChanged();
    partial void OnstartChanging(System.Nullable<System.DateTime> value);
    partial void OnstartChanged();
    partial void Onis_freeChanging(System.Nullable<bool> value);
    partial void Onis_freeChanged();
    partial void Onis_acceptedChanging(System.Nullable<bool> value);
    partial void Onis_acceptedChanged();
    #endregion
		
		public DOCTOR_OPENTIMES()
		{
			this._DOCTORS = default(EntityRef<DOCTORS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_doctor_id", DbType="Int")]
		public System.Nullable<int> doctor_id
		{
			get
			{
				return this._doctor_id;
			}
			set
			{
				if ((this._doctor_id != value))
				{
					if (this._DOCTORS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondoctor_idChanging(value);
					this.SendPropertyChanging();
					this._doctor_id = value;
					this.SendPropertyChanged("doctor_id");
					this.Ondoctor_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[end]", Storage="_end", DbType="DateTime")]
		public System.Nullable<System.DateTime> end
		{
			get
			{
				return this._end;
			}
			set
			{
				if ((this._end != value))
				{
					this.OnendChanging(value);
					this.SendPropertyChanging();
					this._end = value;
					this.SendPropertyChanged("end");
					this.OnendChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_start", DbType="DateTime")]
		public System.Nullable<System.DateTime> start
		{
			get
			{
				return this._start;
			}
			set
			{
				if ((this._start != value))
				{
					this.OnstartChanging(value);
					this.SendPropertyChanging();
					this._start = value;
					this.SendPropertyChanged("start");
					this.OnstartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_free", DbType="Bit")]
		public System.Nullable<bool> is_free
		{
			get
			{
				return this._is_free;
			}
			set
			{
				if ((this._is_free != value))
				{
					this.Onis_freeChanging(value);
					this.SendPropertyChanging();
					this._is_free = value;
					this.SendPropertyChanged("is_free");
					this.Onis_freeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_accepted", DbType="Bit")]
		public System.Nullable<bool> is_accepted
		{
			get
			{
				return this._is_accepted;
			}
			set
			{
				if ((this._is_accepted != value))
				{
					this.Onis_acceptedChanging(value);
					this.SendPropertyChanging();
					this._is_accepted = value;
					this.SendPropertyChanged("is_accepted");
					this.Onis_acceptedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DOCTORS_DOCTOR_OPENTIME", Storage="_DOCTORS", ThisKey="doctor_id", OtherKey="id", IsForeignKey=true)]
		public DOCTORS DOCTORS
		{
			get
			{
				return this._DOCTORS.Entity;
			}
			set
			{
				DOCTORS previousValue = this._DOCTORS.Entity;
				if (((previousValue != value) 
							|| (this._DOCTORS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DOCTORS.Entity = null;
						previousValue.DOCTOR_OPENTIMES.Remove(this);
					}
					this._DOCTORS.Entity = value;
					if ((value != null))
					{
						value.DOCTOR_OPENTIMES.Add(this);
						this._doctor_id = value.id;
					}
					else
					{
						this._doctor_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("DOCTORS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
